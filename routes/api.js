var express = require('express');
var request = require('request');
var router = express.Router();
var database;
var jwt = require('express-jwt');

var jwtCheck = jwt({
  secret:  require('auth0-api-jwt-rsa-validation'),
  audience: 'http://chitchat-cepheus.com',
  issuer: "https://chit-chat.auth0.com/",
  algorithms: ['RS256']
});

var scopeCheck = function(req, res, next) {
  var permissions = ['admin'];
  if (req.user.scope.includes(permissions)) {
    next();
  } else {
    res.status(403).send('Forbidden');
  }
};

router.use(jwtCheck);

router.use(function(err, req, res, next) {
  if (err.name === 'UnauthorizedError') {
    res.status(401).send('Missing or invalid token');
  }
});

router.use(scopeCheck);

router.use('/', function(req, res, next) {
  database = req.app.db;    // firebase database reference
  next();
});

// Returns all chatrooms
router.get('/rooms', function (req, res) {
  var roomRef = database.ref('rooms');
  roomRef.once('value').then(function(snapshot) {
    res.status(200).json(snapshot);
  });
});

// Returns single room, id parameter = room id
router.get('/rooms/:id', function(req, res) {
  var roomRef = database.ref('rooms/' + req.params.id);
  roomRef.once('value').then(function(snapshot) {
    res.status(200).json(snapshot);
  });
});

// Delete single chatroom and all users and messages in it
router.delete('/rooms/:id', function(req, res) {
  
});

// Create new room, returns room id and url
router.post('/rooms', function (req, res) {
  var roomsRef = database.ref('rooms');
  var newRoomRef = roomsRef.push();   // key generated by firebase
  var roomId = newRoomRef.key;
  newRoomRef.set({
    'name': req.body.name,
    'userCount': 0,
    'created': Date.now()
    }).then(function() {
        var url = 'http://' + req.hostname + req.originalUrl + '/' + roomId;
        var room = {
            'id': roomId,
            'url': url
        }
        res.status(200).json(room);
    });
});

// Adds user to room, id parameter = room id
router.post('/users/:id', function (req, res) {
  var userRef = database.ref('rooms/' + req.params.id + '/users');
  var userId = req.body.userId;
  userRef.set({
      [userId]: {
        "name": req.body.name
      }
  }).then(function() {
    res.status(200).end();
  });
});


// Removes user from  user, id parameter = room id
router.delete('/users/:id', function (req, res) {
  var userRef = database.ref('rooms/' + req.params.id + '/users/' + req.body.userId );
  userRef.remove().then(function() {
    res.status(200).end();
  })
  .catch(function(error) {
    console.log("Error removing user: " + error.message);
  });
});


// Creates new message, id parameter = room id
router.post('/messages/:id', function (req, res) {
  var msgRef = database.ref('messages/' + req.params.id);
  var newMsgRef = msgRef.push();    // key generated by firebase
  var msgID = newMsgRef.key;
  newMsgRef.set({
    'userId': req.body.userId,
    'message': req.body.message,
    'timestamp': Date.now()
  }).then(function(){
    res.status(200).end();
  });
});

// Returns all messages from a chatroom, id parameter = room id
router.get('/messages/:id', function (req, res) {
  var msgRef = database.ref('messages/' + req.params.id);
  msgRef.once('value').then(function(snapshot) {
    res.status(200).json(snapshot);
  });
});


module.exports = router;